version: 2.1

jobs:
  build:
    docker:
      - image: cimg/rust:1.82
    resource_class: small
    environment:
      RUSTFLAGS: -D warnings
    steps:
      - checkout
      - run: cargo --version
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          keys:
            - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build all targets
          command: cargo build
      - save_cache:
          paths:
            - /home/circleci/.cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Run Tests
          command: "cargo test"

  publish:
    docker:
      - image: cimg/rust:1.82
    resource_class: small
    steps:
      - checkout
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          keys:
            - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Set up git for commits
          command: |
            git config user.email "ci@circleci.com"
            git config user.name "CircleCI"
            git remote set-url origin https://${GITHUB_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git
      - run:
          name: Set crate version from tag and commit to main
          command: |
            # Run release script to update Cargo.toml
            ./release.sh
            # Switch to main branch and commit the version change
            git checkout main
            git add Cargo.toml
            git commit -m "Update version to ${CIRCLE_TAG#v} for release ${CIRCLE_TAG}" || echo "No changes to commit"
            git push origin main
      - run:
          name: Verify crate can be packaged
          command: cargo package --allow-dirty
      - run:
          name: Publish to crates.io
          command: |
            cargo publish --token $CARGO_REGISTRY_TOKEN

workflows:
  version: 2
  build-and-publish:
    jobs:
      - build:
          filters:
            branches:
              only: /.*/  # Run on all branches
            tags:
              only: /^v.*/  # AND also run on v* tags
      - publish:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/  # Only run on tags, not branches
          context: crates-publish  # Optional: use a context for the token
